---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Pagination from "../../components/Pagination.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Pokemon from "../../components/Pokemon.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const collection = (await getCollection("pokemon")).sort(
        (a: CollectionEntry<"pokemon">, b: CollectionEntry<"pokemon">) => {
            return (
                new Date(a.data.id).valueOf() - new Date(b.data.id).valueOf()
            );
        },
    );
    const pokemons = await Promise.all(
        collection.map(async (item: CollectionEntry<"pokemon">) => {
            return { ...item.data };
        }),
    );
    return paginate(pokemons, {
        pageSize: 24,
    });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;
---

<BaseLayout>
    <div
        class="grid justify-self-center grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-4"
    >
        {
            page.data.map((pokemon) => (
                <Pokemon
                    title={pokemon.title}
                    types={pokemon.types}
                    image={pokemon.image}
                    id={pokemon.id}
                />
            ))
        }
    </div>
    <Pagination
        currentPage={page.currentPage}
        lastPage={page.lastPage}
        url={page.url}
    />
</BaseLayout>
